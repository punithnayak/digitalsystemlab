$date
	Wed Oct 12 10:25:35 2022
$end
$version
	Icarus Verilog
$end
$timescale
	1ns
$end
$scope module d38_tb $end
$var wire 8 ! out [7:0] $end
$var reg 3 " in [2:0] $end
$scope module d38 $end
$var wire 3 # in [2:0] $end
$var wire 8 $ out [7:0] $end
$scope module d1 $end
$var wire 2 % en [1:0] $end
$var wire 2 & in [1:0] $end
$var reg 4 ' out [3:0] $end
$upscope $end
$scope module d2 $end
$var wire 2 ( en [1:0] $end
$var wire 2 ) in [1:0] $end
$var reg 4 * out [3:0] $end
$upscope $end
$upscope $end
$scope begin $ivl_for_loop0 $end
$var integer 32 + k [31:0] $end
$upscope $end
$upscope $end
$enddefinitions $end
#0
$dumpvars
b0 +
b0 *
b0 )
b0 (
b1 '
b0 &
b1 %
b1 $
b0 #
b0 "
b1 !
$end
#20
b10 !
b10 $
b10 '
b1 &
b1 )
b1 "
b1 #
b1 +
#40
b100 !
b100 $
b100 '
b10 &
b10 )
b10 "
b10 #
b10 +
#60
b1000 !
b1000 $
b1000 '
b11 &
b11 )
b11 "
b11 #
b11 +
#80
b0 '
b0 %
b10000 !
b10000 $
b1 *
b0 &
b0 )
b1 (
b100 "
b100 #
b100 +
#100
b100000 !
b100000 $
b10 *
b1 &
b1 )
b101 "
b101 #
b101 +
#120
b1000000 !
b1000000 $
b100 *
b10 &
b10 )
b110 "
b110 #
b110 +
#140
b10000000 !
b10000000 $
b1000 *
b11 &
b11 )
b111 "
b111 #
b111 +
#160
b1000 +
